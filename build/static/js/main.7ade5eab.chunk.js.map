{"version":3,"sources":["home.js","cpi.js","map.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faQuoteLeft","faGithub","faEnvelope","buttonStyle","backgroundColor","border","Home","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","selectedState","selectedCity","defaultInfo","City","CompositeIndex","GroceryItems","HealthCare","Housing","Miscellaneous","Transportation","Utilities","cityInfo","noData","inherits","createClass","key","value","react_default","a","createElement","Fragment","reactstrap_es","className","react_fontawesome_index_es","icon","id","home_QuickSearch","href","alt","style","color","size","Component","QuickSearch","_this2","props","_this3","d3","then","d","setState","event","_this4","preventDefault","find","toUpperCase","State","undefined","_this5","groupState","groupBy","orderBy","listOfStates","push","createStateOptions","map","i","form","md","onChange","target","type","name","placeholder","onClick","quickSearchResults","ResponsiveContainer","width","aspect","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","faHome","faMoneyBillAlt","faMapMarkerAlt","faAngleLeft","Cpi","currentCity","currentState","desiredCity","desiredState","statement","summary","current","anticipated","cpi_FormArea","FormArea","currentInfo","desiredInfo","mysummary","comment","console","log","handleClick","renderInfo","stackId","greenIcon","L","iconUrl","iconSize","iconAnchor","popupAnchor","redIcon","blueIcon","MapClass","filteredData","zoom","selected","map_LeafletMap","LeafletMap","highInfo","filter","lowInfo","midInfo","mapControls","check","checked","leafyMarkers","Marker","position","Lat","Long","Popup","renderCardInfo","renderMarkerInfo","Map","center","TileLayer","attribution","url","App","HashRouter","role","Link","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ade5eab.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Container, Row, Col, Input, Button } from 'reactstrap';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faQuoteLeft, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as d3 from 'd3';\nimport { find, groupBy, orderBy } from 'lodash';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from \"recharts\"\nlibrary.add(faQuoteLeft, faGithub, faEnvelope)\n\nlet buttonStyle = {\n    backgroundColor: \"transparent\",\n    border: \"none\"\n  }\n\n\nexport class Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            data: [],\n            selectedState: '',\n            selectedCity: '',\n            defaultInfo: [\n                { City: \"\" },\n                { CompositeIndex: \"100\" },\n                { GroceryItems: \"100\" },\n                { HealthCare: \"100\" },\n                { Housing: \"100\" },\n                { Miscellaneous: \"100\" },\n                { Transportation: \"100\" },\n                { Utilities: \"100\" },\n            ],\n            cityInfo: [\n                { City: \"\" },\n                { CompositeIndex: \"100\" },\n                { GroceryItems: \"100\" },\n                { HealthCare: \"100\" },\n                { Housing: \"100\" },\n                { Miscellaneous: \"100\" },\n                { Transportation: \"100\" },\n                { Utilities: \"100\" },\n            ],\n            noData: \"\"\n        }\n    }\n    render() {\n\n        return (\n            <>\n                <Container>\n                    <Row>\n                        <Col>\n                            <header>\n                                <h1>The Real Cost...</h1>\n                            </header>\n                        </Col>\n                    </Row>\n                    <Row className=\"section\">\n                        <div>\n                            <blockquote>\n                                <FontAwesomeIcon icon={faQuoteLeft} />\n                                The old rules are crumbling and nobody knows what the new rules are.\n                                So make up your own rules.\n                            <FontAwesomeIcon icon={faQuoteLeft} id=\"closeQuote\" />\n                                <cite>- Neil Gaiman to The University of the Arts in 2012</cite>\n                            </blockquote>\n                        </div>\n                        <div>\n                            <p>\n                                Graduation is an exciting time and definately a milestone to be recognized.\n                                However, this day also marks the beginning of a new adventure that comes with\n                                more \"adulting\" than most are prepared for. Part of the challenge is trying to\n                                figure out the real world.\n                        </p>\n                            <p>\n                                Money in, money out is something everybody struggles with. Some of this cost can\n                                be reduced by understanding cost of living. How much are you willing to\n                                pay for food\n                                or transportation or healthcare...?\n                        </p>\n                        </div>\n                    </Row>\n                </Container>\n                <Container >\n                    <Row className=\"section\">\n                        <Col>\n                            <header>\n                                <h2>Quick Search</h2>\n                            </header>\n                        </Col>\n                    </Row>\n                    <Row className=\"section\">\n                        <Col>\n                            <p>Before we move on to discuss Cost of Living, lets take a moment run a quick search. Enter a city and state to see the results.</p>\n                            <p>A more comprehensive search is available on the next page</p>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <QuickSearch state={this.state} />\n                    </Row>\n                </Container>\n                <Container>\n                    <Row>\n                        <Col>\n                            <header>\n                                <h1>Cost of Living</h1>\n                            </header>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    <Row className=\"section\">\n                        <Col>\n                            <h2>\n                                What is the 'Cost of Living'?\n                        </h2>\n                        </Col>\n                    </Row>\n                    <Row className=\"section\">\n                        <Col>\n                            <p>\n                                The cost of living is the amount of money needed to sustain a certain level of living\n                                including basic expenses such as housing, food, taxes and health care. The cost of living\n                                is often used to compare how expensive it is to live in one city versus another.\n                                The cost of living is tied to wages because salary levels are measured against the expenses\n                                required to maintain a basic standard of living depending on the geographic region.\n                        </p>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <Row className=\"section\">\n                        <Col>\n                            <h2>\n                                The Cost of Living Index\n                        </h2>\n                        </Col>\n                    </Row>\n                    <Row className=\"section\">\n                        <Col>\n                            <p>\n                                The cost of living index compares the cost of living in a major city to a corresponding\n                                metropolitan area. The index incorporates the expense of various components of basic human\n                                needs creating an aggregate measure that workforce entrants can use as a benchmark. As college\n                                graduates weigh employment alternatives and currently employed job seekers consider relocation,\n                                the index provides an informative snapshot of rental, transportation and grocery costs.\n                    </p>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <Row className=\"section\">\n                        <Col>\n                            <h2>\n                                Cost of Living and Wages\n                        </h2>\n                        </Col>\n                    </Row>\n                    <Row className=\"section\">\n                        <Col>\n                            <p>\n                                The rising cost of living has spurred debate over the U.S. federal minimum wage and the\n                                disparity\n                                between the lowest wage allowed by law and the earnings needed to maintain an adequate cost\n                                of living. Proponents of a minimum wage hike cite increased worker productivity levels since\n                                1968 as inequitably correlated to the minimum hourly rate of pay in 2012. As the minimum wage\n                                once tracked the increase in productivity, the divergence between earnings and worker\n                                efficiency\n                                has reached historically disproportionate levels. By contrast, opponents of a minimum wage\n                                increase contend that a raise could spur higher consumer prices as employers offset rising\n                                labor\n                                costs.\n                    </p>\n                            <cite><a href=\"https://www.investopedia.com/terms/c/cost-of-living.asp\" alt=\"link to investopidia\"> - Investopidia</a></cite>\n                        </Col>\n                    </Row>\n                    <Row className=\"footer\">\n                        <Col >\n                            <Button style={buttonStyle}>\n                                <a href=\"https://github.com/info340d-au18/project-munyii18386.git\" alt=\"github\">\n                                    <FontAwesomeIcon className=\"navicon\" icon={faGithub} color=\"gray\" size='2x' /></a>\n                            </Button>\n                        </Col>\n                        <Col>\n                            <p>© 2018 Mburu</p>\n                        </Col>\n                        <Col>\n                            <Button style={buttonStyle}>\n                                <a href=\"mailto: lmburu@uw.edu\" alt=\"email\">\n                                    <FontAwesomeIcon className=\"navicon\" icon={faEnvelope} color=\"gray\" size='2x' /></a>\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"end\"></Row>\n                </Container>\n            </>\n        )\n    }\n\n}\n\n\n\nclass QuickSearch extends Component {\n    state = this.props.state\n    componentDidMount() {\n        d3.csv(\"data/cost-of-living-index.csv\").then(d => {\n            this.setState({\n                data: d\n            })\n        })\n    }\n\n    quickSearchResults(event) {\n        event.preventDefault();\n        let cityInfo = find(this.state.data, (d) => {\n            let dCity = d.City.toUpperCase()\n            let sCity = this.state.selectedCity.toUpperCase()\n            return (dCity === sCity && d.State === this.state.selectedState)\n        })\n        this.setState({ cityInfo: [cityInfo] })\n        if (cityInfo === null || cityInfo === undefined) {\n            this.setState({\n                noData: \"Unfortunately the information you are requesting is currently unavailable. Please Try again.\",\n                cityInfo: this.state.defaultInfo\n            })\n        } else {\n            this.setState({ noData: \"\" })\n        }\n\n    }\n\n    render() {\n        let groupState = groupBy(orderBy(this.state.data, [\"State\"], ['asc']), \"State\")\n        let listOfStates = [\"Select a State\"]\n        for (let key in groupState) {\n            listOfStates.push(key)\n        }\n        let createStateOptions = listOfStates.map((d, i) => {\n            return (\n                <option key={i}>{d}</option>\n            )\n        })\n\n        return (\n            <Container>\n                <Row form>\n                    <Col md={6} className=\"userInput\">\n                        <Input onChange={(event) => { this.setState({ selectedState: event.target.value }) }} type=\"select\" name=\"select\" id=\"State\">\n                            {createStateOptions}\n                        </Input>\n                    </Col>\n                    <Col md={6} className=\"userInput\">\n                        <Input onChange={(event) => { this.setState({ selectedCity: event.target.value }) }} type=\"city-name\" name=\"city-name\" id=\"City\" placeholder=\"City\" />\n                    </Col>\n                    <Col className=\"userInput\"><Button className=\"button\" onClick={(event) => { this.quickSearchResults(event) }}>Search</Button></Col>\n                </Row>\n\n                <Row className=\"text-warning error\">\n                    <p>\n                        {this.state.noData}\n                    </p>\n                </Row>\n\n                <Row >\n                <ResponsiveContainer width=\"99%\" aspect={2}>\n                    <BarChart data={this.state.cityInfo}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"City\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"CompositeIndex\" fill=\"#B31E00\" />\n                        <Bar dataKey=\"GroceryItems\" fill=\"#E6E600\" />\n                        <Bar dataKey=\"Housing\" fill=\"#1A9900\" />\n                        <Bar dataKey=\"Utilities\" fill=\"#001999\" />\n                        <Bar dataKey=\"Transportation\" fill=\"#FF00FF\" />\n                        <Bar dataKey=\"HealthCare\" fill=\"#FF7733\" />\n                        <Bar dataKey=\"Miscellaneous\" fill=\"#8884d8\" />\n                    </BarChart>\n                    </ResponsiveContainer>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\n\n\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport { find, groupBy, orderBy } from 'lodash';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faMoneyBillAlt, faMapMarkerAlt, faAngleLeft, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(faHome, faMoneyBillAlt, faMapMarkerAlt, faAngleLeft, faEnvelope, faGithub)\n\nlet buttonStyle = {\n    backgroundColor: \"transparent\",\n    border: \"none\"\n  }\n\nexport class Cpi extends Component {\n    constructor() {\n        super()\n        this.state = {\n            data: [],\n            currentCity: '',\n            currentState: '',\n            desiredCity: '',\n            desiredState: '',\n            noData: \"\",\n            statement: '',\n            summary: [\n                { name: \"CPI\", current: 100, anticipated: 100 },\n                { name: \"Grocery\", current: 100, anticipated: 100 },\n                { name: \"Housing\", current: 100, anticipated: 100 },\n                { name: \"Util\", current: 100, anticipated: 100 },\n                { name: \"Trans\", current: 100, anticipated: 100 },\n                { name: \"Health\", current: 100, anticipated: 100 },\n                { name: \"Misc\", current: 100, anticipated: 100 }\n            ],\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <h1>Cost of Living Comparison</h1>\n                    </Col>\n                </Row>\n                <Row className='section'>\n                    <p>Explore the differences between locations. Enter your current city, state and your desired\n                         city, state to see the difference in cost of living.Please Note: Results are dependent on the available data.</p>\n                </Row>\n                <FormArea state={this.state} />\n                <Row className=\"footer\" >\n                        <Col>\n                            <Button style={buttonStyle}>\n                                <a href=\"https://github.com/info340d-au18/project-munyii18386.git\" alt=\"github\">\n                                    <FontAwesomeIcon className=\"navicon\" icon={faGithub} color=\"gray\" size='2x' /></a>\n                            </Button>\n                        </Col>\n                        <Col>\n                            <p>© 2018 Mburu</p>\n                        </Col>\n                        <Col>\n                            <Button style={buttonStyle}>\n                                <a href=\"mailto: lmburu@uw.edu\" alt=\"email\">\n                                    <FontAwesomeIcon className=\"navicon\" icon={faEnvelope} color=\"gray\" size='2x' /></a>\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"end\"></Row>\n            </Container>\n\n\n        )\n    }\n}\n\nclass FormArea extends Component {\n    state = this.props.state\n\n    // getting the data\n    componentDidMount() {\n        d3.csv(\"data/cost-of-living-index.csv\").then(d => {\n            this.setState({\n                data: d\n            })\n        })\n    }\n\n    handleClick(event) {\n        if (event.target.id === \"currentState\") {\n            this.setState({ currentState: event.target.value })\n        } else if (event.target.id === \"currentCity\") {\n            this.setState({ currentCity: event.target.value })\n        } else if (event.target.id === \"desiredState\") {\n            this.setState({ desiredState: event.target.value })\n        } else {\n            this.setState({ desiredCity: event.target.value })\n        }\n\n\n    }\n\n    renderInfo(event) {\n        event.preventDefault()\n        this.setState({\n            noData: '',\n            statement: ''\n        })\n        let currentInfo = find(this.state.data, (d) => {\n            return (d.City.toUpperCase() === this.state.currentCity.toUpperCase() && d.State === this.state.currentState)\n        })\n        let desiredInfo = find(this.state.data, (d) => {\n            return (d.City.toUpperCase() === this.state.desiredCity.toUpperCase() && d.State === this.state.desiredState)\n        })\n        if (currentInfo === null || currentInfo === undefined || desiredInfo == null || desiredInfo == null) {\n            this.setState({\n                noData: \"Unfortunately the information you are requesting is currently unavailable. Please Try again.\",\n                summary: [\n                    { name: \"CPI\", current: 100, anticipated: 100 },\n                    { name: \"Grocery\", current: 100, anticipated: 100 },\n                    { name: \"Housing\", current: 100, anticipated: 100 },\n                    { name: \"Util\", current: 100, anticipated: 100 },\n                    { name: \"Trans\", current: 100, anticipated: 100 },\n                    { name: \"Health\", current: 100, anticipated: 100 },\n                    { name: \"Misc\", current: 100, anticipated: 100 }\n                ],\n            })\n        } else {\n            let mysummary = [\n                { name: \"CPI\", current: currentInfo.CompositeIndex, anticipated: desiredInfo.CompositeIndex },\n                { name: \"Grocery\", current: currentInfo.GroceryItems, anticipated: desiredInfo.GroceryItems },\n                { name: \"Housing\", current: currentInfo.Housing, anticipated: desiredInfo.Housing },\n                { name: \"Util\", current: currentInfo.Utilities, anticipated: desiredInfo.Utilities },\n                { name: \"Trans\", current: currentInfo.Transportation, anticipated: desiredInfo.Transportation },\n                { name: \"Health\", current: currentInfo.HealthCare, anticipated: desiredInfo.HealthCare },\n                { name: \"Misc\", current: currentInfo.Miscellaneous, anticipated: desiredInfo.Miscellaneous }\n            ]\n            let comment = \"Differences between \" + currentInfo.City + \", \" + currentInfo.State + \" and \" + desiredInfo.City + \", \" + desiredInfo.State\n            console.log(mysummary)\n            console.log(comment)\n            this.setState({\n                statement: comment,\n                summary: mysummary\n            })\n        }\n\n\n\n\n    }\n\n    render() {\n\n\n        //create list of states\n        let groupState = groupBy(orderBy(this.state.data, [\"State\"], ['asc']), \"State\")\n        let listOfStates = [\"Select a State\"]\n        for (let key in groupState) {\n            listOfStates.push(key)\n        }\n        let createStateOptions = listOfStates.map((d, i) => {\n            return (\n                <option key={i}>{d}</option>\n            )\n        })\n\n        return (\n            <Container>\n                <Row>\n                    <p className=\"text-muted label\">\n                        I live in:\n                    </p>\n\n                </Row>\n                <Row>\n                    <Col>\n                        <FormGroup>\n                            <Input onChange={(event) => { this.handleClick(event) }} type=\"select\" name=\"select\" id=\"currentState\">\n                                {createStateOptions}\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                            <Input onChange={(event) => { this.handleClick(event) }} type=\"email\" name=\"email\" id=\"currentCity\" placeholder=\"Current City\" />\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <p className=\"text-muted label\">\n                        I want to live in:\n                    </p>\n                </Row>\n                <Row>\n                    <Col>\n                        <FormGroup>\n                            <Input onChange={(event) => { this.handleClick(event) }} type=\"select\" name=\"select\" id=\"desiredState\">\n                                {createStateOptions}\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                            <Input onChange={(event) => { this.handleClick(event) }} type=\"email\" name=\"email\" id=\"desiredCity\" placeholder=\"Desired City\" />\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Button className=\"button\" onClick={(event) => { this.renderInfo(event) }}>Compare</Button>\n                </Row>\n                <Row className=\"text-warning error\">\n                    <p>\n                        {this.state.noData}\n                    </p>\n                </Row>\n                <Row className=\"text-success info\">\n                    <p>\n                        {this.state.statement}\n                    </p>\n                </Row>\n                <Row >\n                <ResponsiveContainer width=\"89%\" aspect={2}>\n                    <BarChart  data={this.state.summary}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"current\" stackId=\"a\" fill=\"#D0FF14\" />\n                        <Bar dataKey=\"anticipated\" stackId=\"a\" fill=\"#AB274F\" />\n                    </BarChart>\n                </ResponsiveContainer>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport './App.css';\nimport * as d3 from 'd3';\nimport { Container, Row, Col, FormGroup, Label, Input, Card, CardBody, CardTitle, CardSubtitle, CardText , Button} from 'reactstrap'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport { Map, TileLayer, Marker, Popup, } from 'react-leaflet'\nimport L from 'leaflet'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faMoneyBillAlt, faMapMarkerAlt, faAngleLeft, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(faHome, faMoneyBillAlt, faMapMarkerAlt, faAngleLeft, faEnvelope, faGithub)\n\nlet buttonStyle = {\n    backgroundColor: \"transparent\",\n    border: \"none\"\n  }\n\n//custom map markers for leaflet\nconst greenIcon = L.icon({\n    iconUrl: 'img/green-marker.png',\n    iconSize: [25, 41],\n    iconAnchor: [22, 94],\n    popupAnchor: [-10, -90],\n});\nconst redIcon = L.icon({\n    iconUrl: 'img/red-marker.png',\n    iconSize: [25, 41],\n    iconAnchor: [22, 94],\n    popupAnchor: [-10, -90],\n});\n\nconst blueIcon = L.icon({\n    iconUrl: 'img/blue-marker.png',\n    iconSize: [25, 41],\n    iconAnchor: [22, 94],\n    popupAnchor: [-10, -90],\n});\n\n\nexport class MapClass extends Component {\n    constructor() {\n        super()\n        this.state = {\n            data: [],\n            filteredData: [],\n            zoom: 0,\n            selected: '',\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <Container>\n                    <Row>\n                        <Col>\n                            <header >\n                                <h1>Cost of Living Map</h1>\n                            </header>\n                           \n                        </Col>\n                    </Row>\n                    <Row className=\"section\">\n                    <p>Here is a closer look at the cost of living across the US. Please note: information\n                                displayed is based on the data available thus not all cities are represented on this map.\n                    </p>\n                    </Row>\n                    <LeafletMap state={this.state} />\n                    <Row className=\"footer\">\n                        <Col>\n                            <Button style={buttonStyle}>\n                                <a href=\"https://github.com/info340d-au18/project-munyii18386.git\" alt=\"github\">\n                                    <FontAwesomeIcon className=\"navicon\" icon={faGithub} color=\"gray\" size='2x' /></a>\n                            </Button>\n                        </Col>\n                        <Col>\n                            <p>© 2018 Mburu</p>\n                        </Col>\n                        <Col>\n                            <Button style={buttonStyle}>\n                                <a href=\"mailto: lmburu@uw.edu\" alt=\"email\">\n                                    <FontAwesomeIcon className=\"navicon\" icon={faEnvelope} color=\"gray\" size='2x' /></a>\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"end\"></Row>\n                </Container>\n            \n            </>\n        )\n    }\n\n}\n\nclass LeafletMap extends Component {\n    state = this.props.state\n\n    //load in data. Data origins: https://github.com/dannycochran/Cost-of-Living/blob/master/living.csv\n    componentDidMount() {\n        d3.csv(\"data/cost-of-living-index.csv\").then(d => {\n            this.setState({\n                data: d\n            })\n        })\n    }\n\n    //handles click event\n    handleClick(event) {\n        this.setState({ selected: event.target.id })\n\n        if (event.target.id === 'High') {\n            let highInfo = this.state.data.filter((d) => {\n                return (d.CompositeIndex > 100)\n            })\n            this.setState({\n                zoom: 4,\n                filteredData: highInfo,\n            })\n        } else if (event.target.id === \"Low\") {\n            let lowInfo = this.state.data.filter((d) => {\n                return (d.CompositeIndex < 90)\n            })\n            this.setState({\n                zoom: 5,\n                filteredData: lowInfo,\n            })\n        } else if (event.target.id === \"Mid\") {\n            let midInfo = this.state.data.filter((d) => {\n                return (d.CompositeIndex > 90 && d.CompositeIndex < 100)\n            })\n            this.setState({\n                zoom: 5,\n                filteredData: midInfo,\n            })\n        } else {\n            this.setState({\n                zoom: 5,\n                filteredData: this.state.data,\n            })\n        }\n    }\n\n    // create custom card for popup\n    renderCardInfo(d) {\n        return (\n            <Card className=\"bg-info clearfix\">\n                <CardBody>\n                    <CardTitle>Location: {d.City + \", \" + d.State}</CardTitle>\n                    <CardSubtitle>Composite Index: {d.CompositeIndex}</CardSubtitle>\n                    <CardText>Grocery Index: {d.GroceryItems}</CardText>\n                    <CardText>Housing Index: {d.Housing}</CardText>\n                    <CardText>Utilities Index: {d.Utilities}</CardText>\n                    <CardText>Transportation Index: {d.Transportation}</CardText>\n                    <CardText>Healthcare Index: {d.HealthCare}</CardText>\n                    <CardText>Misc Index: {d.Miscellaneous}</CardText>\n                </CardBody>\n            </Card>\n        )\n    }\n\n  \n    render() {\n        // set map controls\n        let options = [\"All\", \"Low\", \"Mid\", \"High\"];\n        let mapControls = options.map((d, i) => {\n            return (\n                <Col key={i}>\n                    <FormGroup check>\n                        <Label check>\n                            <Input onClick={(event) => this.handleClick(event)} type=\"radio\" name={\"radio\" + i} id={d} checked={this.state.selected === d} />\n                            {d + \" Points\"}\n                        </Label>\n                    </FormGroup>\n                </Col>\n            )\n        })\n\n        //create location markers based on data set\n        let leafyMarkers = this.state.filteredData.map((d, i) => {\n            if (d.CompositeIndex < 90) {\n                return (\n                    <Marker\n                        key={i}\n                        position={[d.Lat, d.Long]} icon={greenIcon} >\n                        <Popup>{this.renderCardInfo(d)}</Popup>\n\n                    </Marker>)\n            } else if (d.CompositeIndex > 90 && d.CompositeIndex < 100) {\n                return (\n                    <Marker\n                        key={i}\n                        position={[d.Lat, d.Long]} icon={blueIcon}>\n                        <Popup >{this.renderCardInfo(d)}</Popup>\n                    </Marker >)\n            } else {\n                return (\n                    <Marker onClick={this.renderMarkerInfo}\n                        key={i}\n                        position={[d.Lat, d.Long]} icon={redIcon}>\n                        <Popup>{this.renderCardInfo(d)}</Popup>\n                    </Marker>)\n            }\n        })\n\n        // display map\n        return (\n            <Container className=\"leafyMap\">\n                <Row>\n                    {mapControls}\n                </Row>\n                <Map className=\"leafyMap\" center={[37.6, -95.665]} zoom={this.state.zoom}>\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    {leafyMarkers}\n                </Map>\n            </Container>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Home } from './home';\nimport { Cpi } from './cpi';\nimport { MapClass } from './map';\nimport { Button } from 'reactstrap'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faMoneyBillAlt, faMapMarkerAlt, faAngleLeft, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(faHome, faMoneyBillAlt, faMapMarkerAlt, faAngleLeft, faEnvelope, faGithub)\n\n\n\nlet buttonStyle = {\n  backgroundColor: \"transparent\",\n  border: \"none\"\n}\n\nclass App extends Component {\n\n  render() {\n    return (\n      <>\n        <Router>\n\n          <Container className=\"box\" role=\"navigation\">\n            <Row>\n              <Col>\n                <Link to='/'><Button className=\"link\" style={buttonStyle}><FontAwesomeIcon  icon={faHome} size='3x' color=\"gray\" /></Button></Link>\n              </Col>\n              <Col>\n                <Link to='/cpi'><Button className=\"link\" style={buttonStyle}><FontAwesomeIcon icon={faMoneyBillAlt} size='3x' color=\"gray\" /></Button></Link>\n              </Col>\n              <Col>\n                <Link to='/map'><Button className=\"link\" style={buttonStyle}><FontAwesomeIcon  icon={faMapMarkerAlt} size='3x' color=\"gray\" /></Button></Link>\n              </Col>\n            </Row>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/cpi\" component={Cpi} />\n            <Route path=\"/map\" component={MapClass} />\n          </Container>\n        </Router>\n       \n      </>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'leaflet/dist/leaflet.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport 'fontawesome';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}